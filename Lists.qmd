---
title: "Lists in Python"
---

This notebook covers the basics of working with lists in Python. Lists are a fundamental data structure, and understanding how to create, access, and manipulate them is essential for effective Python programming.

Lists are one of the most versatile data structures in Python. They are used to store collections of items in a particular order. Here, we'll explore the basics of working with lists in Python.

## Creating a List

You can create a list by enclosing a comma-separated sequence of items within square brackets `[ ]`. For example:

```{python}
fruits = ["apple", "banana", "cherry"]
print(fruits)
```

Lists can contain items of different data types:

```{python}
mixed_list = [1, 2.3, "hello", True]
print(mixed_list)
```

## Accessing List Items

You can access individual items in a list using an index. Python uses zero-based indexing, which means the first item in the list has an index of 0.

```{python}
fruits = ["apple", "banana", "cherry"]
print(fruits[0])  # First item
print(fruits[2])  # Third item
```

You can also use negative indices to access items from the end of the list:

```{python}
print(fruits[-1])  # Last item
print(fruits[-2])  # Second-to-last item
```

## List Slicing

You can create a new list by slicing an existing one. The syntax is `list[start:stop:step]`, where `start` is the index to start from (inclusive), `stop` is the index to stop before (exclusive), and `step` is the step size (optional).

```{python}
numbers = [48,52,55,47,56,53,63,45]
print(numbers[2:6])  # Sublist from index 2 to 5
print(numbers[:4])   # Sublist from the beginning to index 3
print(numbers[6:])   # Sublist from index 6 to the end
print(numbers[::2])  # Every other item (step size 2)
```

## List Methods

Lists in Python come with several built-in methods that allow you to manipulate them. Here are a few commonly used methods:

### Appending an item to the end of the list
```{python}
fruits = ["apple", "banana", "cherry"]
fruits.append("orange")
print(fruits)
```

### Inserting an item at a specific index
```{python}
fruits.insert(1, "mango")
print(fruits)
```

### Removing an item by value
```{python}
fruits.remove("banana")
print(fruits)
```

### Removing an item by index
```{python}
del fruits[1]
print(fruits)
```

### Getting the index of an item
```{python}
print(fruits.index("apple"))
```

### Counting occurrences of an item
```{python}
new_fruits = ["apple", "cherry", "apple"]
print(new_fruits.count("apple"))
```

### Sorting the list
```{python}
new_fruits.sort()
print(new_fruits)
```

### Reversing the list
```{python}
new_fruits.reverse()
print(new_fruits)
```

