---
title: "Variables HW"
execute:
    eval: false
---

__Problem__: 
- Store the number 8 in a variable called `x`
- Print out `x`
- Execute the code block


```{python}
CODE
```

The output of the above should be `8`

__Problem__: 
- Now assign `y` to be `5*x+3`
- Print out `y`
- Execute the code block

```{python}
CODE
```

The output of the above should be `43`

__Problem__: 
- Find the square root of 119025 using the function `sqrt`
- Execute the code block

```{python}
CODE
```

The output of the above should be `345`


__Problem__: 
- Use the function `ceiling` to round up the value `1.3`
- Execute the code block

```{python}
CODE
```

The output of the above should be `2`

__Problem__: 
- Use the function `floor` to round down the value `3.8`
- Execute the code block

```{python}
CODE
```

The output of the above should be `3`

__Problem__: 
- Store a new number 10 in the variable called `x`.
- Print out `x`
- Execute the code block

```{python}
CODE
```

The output of the above should be `10`

__Problem__: 
- Assign the variable `myVal` to be `x+y`
- Print out `myVal`
- Execute the code block

```{python}
CODE
```

The output of the above should be `53`

__Problem__: 
- Enter and the expression `14/2-1+3`
- Execute the code block, it outputs  `9`
- Put in parentheses so that it outputs `17` instead

```{python}
14/2-1+3
```

__Problem__: 
- Enter and the expression `8*3+9-9`
- Execute the code block, it outputs  `24`
- Put in parentheses so that it outputs `87` instead

```{python}
8*3+9-9
```

__Problem__: 
- Enter and the expression `10-9*24/8*6`
- Execute the code block, it outputs  `-152`
- Put in parentheses so that it outputs `18` instead

```{python}
10-9*24/8*6
```

__Problem__: 
- Assume you have this code `5(3)`
- Execute the code block, it outputs  an error
- Fix the code so that it outputs 15

```{python}
5(3)
```

__Problem__: 
- Assign a variable `z=7`
- Try to print out this expression: `2z`
- Execute the code, it outputs  an error
- Fix the code so that it outputs `14`

```{python}
z=7
2z
```
