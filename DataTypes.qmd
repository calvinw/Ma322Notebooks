---
title: "Data Types In Python"
---

In Python, variables and expressions have data types. The following table shows the main data types:

| Data Type | Python version | Examples |
|--------------------|------------------|------------|
| Float (Decimal) | float | 2.32, -0.45 |
| String (Text) | str | "hello", "k" |
| Integer | int | 12 |
| Boolean (True/False) | bool | True, False |


You can find out the data type of a variable by using the `type()` function.

## Float (Decimal)

The data type for decimal numbers like 3.2, -2.34, 0.0 is `float`.

The following variable has a data type of float:

```{python}
x = 2.3 
print(type(x))
```

## String

The data type for text or strings is `str`.

Examples are "Bob", "We are the champions", "Fee Fi Fo".

```{python}
y = "hi there"
print(type(y))

z = "XXXYYYZZZ"
print(type(z))
```

## Integer

There is a separate data type for integers (..., -3, -2, -1, 0, 1, 2, 3, ...). Its called `int`.

```{python}
a = 3
print(type(a))
```

## Boolean

The data type for something that holds `True` or `False` is `bool`. This is Python's name for booleans, things that can only be `True` or `False`.

```{python}
u = True
print(type(u))

v = False
print(type(v))
```

You can also just find the type of an expression without having to make it a variable. Here are all the examples from our table above.

```{python}
print(type(2.32))
print(type(-0.45))
print(type("hello"))
print(type("k"))
print(type(12))
print(type(True))
print(type(False))
```

## Converting Types

You can change a variable's type if you need. This is called *converting* the data from one type to another. 

|  Changing types    |  Function     | Example                   |
|--------------------|----------------|-----------------------------|
|  Float   |   `float(x)`  | `float(2)`                |
|  String            |   `str(x)`    | `str(123)`                |
|  Integer           |   `int(x)`    | `int(2.0)`                |
|  Boolean           |   `bool(x)`   | `bool(1)`                 |

The first example converts `2` from `int` to a `float`  
The second example converts `123` from `int` to a `str`  
The third example converts `2.0` from `float` to a `int`  
The fourth example converts `1` from `int`  to a `bool`  

### Convert String to Float

One use for this is to convert a string like "1.23" to a number 1.23. This happens frequently when reading data from files, as numbers are often stored as strings initially.

With quotes around it, a number will be seen as a string. Here is an example:

```{python}
myData = "1.23"
print(type(myData))
```

To change the string "1.23" to a number, we must use `float()` to convert the string to a float:

```{python}
myOtherData = float(myData)
print(type(myOtherData))
```

What happened above was that `myData` was a string data type, but `myOtherData` was a float data type. We call this a *conversion*  when we change the data from one data type to another

### Convert Float to String

We can also convert a number to a string. This sometimes happens when data is stored to a file.

Below, we create a number, then convert it to a string.

```{python}
aNumber = 4.56
print(type(aNumber))

aString = str(aNumber)
print(type(aString))
```

