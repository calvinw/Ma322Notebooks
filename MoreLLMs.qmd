---
title: "More LLMS"
---

{{< include _llm_openai.qmd >}}

## Calling an LLM

Choose a question and set up the code to send the question to the LLM. Any
question you like.

```{python}
#| eval: false
# Define your prompt here
CODE

# Call get_completion and get the response, then print it.
CODE
```
```{python}
# Solution:
# Define your prompt here
prompt = "Why do people like Barbie? 50 words please"

# Call get_completion and get the response, then print it.
response = get_completion(prompt)
print(response)
```

## Calling an LLM with `temperature=0.0`

Call the LLM 3 times with your question above, using temperature 0.0 for these.

```{python}
#| eval: false
#Set up a prompt
CODE

print("Calling the LLM with temperature 0.0")
# Set up a for loop and call your LLM 3 times with temperature 0.0
CODE
```
```{python}
# Solution:
#Set up a prompt
prompt = "Why do people like Barbie? 50 words please"

print("Calling the LLM with temperature 0.0")
# Set up a for loop and call your LLM 3 times with temperature 0.0
for i in range(3):
  response = get_completion(prompt, temperature = 0.0)
  print(response)
  print("------")
```

## Calling an LLM with `temperature=0.7`

Call the LLM 3 times with your question above, using temperature 0.7 for these.

```{python}
#| eval: false
#Set up a prompt
CODE

print("Calling the LLM with temperature 0.7")
# Set up a for loop and call your LLM 3 times with temperature 0.7
CODE
```
```{python}
# Solution:
#Set up a prompt
prompt = "Why do people like Barbie? 50 words please"

print("Calling the LLM with temperature 0.7")
# Set up a for loop and call your LLM 3 times with temperature 0.7
for i in range(3):
  response = get_completion(prompt, temperature = 0.7)
  print(response)
  print("------")
```

## Template For Asking For a Capital

Create a template string with a template variable `place` for asking the LLM to
give you the capital of `place`. Then evaulate the template variable using
`"Texas"`

Finally call the LLM and get the response and print the response.

Fill in the appropriate sections of the code below where you see the word CODE.

```{python}
#| eval: false
# Define template here
CODE

# Evaluate the template with place="Texas"
prompt=template.format(CODE)

# Call get_completion and get the response, then print it.
CODE
```
```{python}
# Solution:
# Define template here
template = "Can you tell me the capital of {place}?"

# Evaluate the template with place="Texas"
prompt=template.format(place="Texas")

# Call get_completion and get the response, then print it.
response = get_completion(prompt)
print(response)
```

## Adding a Variable Called `num`

Add another template variable called `num` to the template and ask the LLM to
provide you with `num` facts about the capital that you specified with
`place`. Print out the response

```{python}
#| eval: false
# Define template here
CODE

# Evaluate the template for "Texas" and 3 facts
prompt=template.format(CODE)

# Call get_completion and get the response, then print it.
CODE
```
```{python}
# Solution:
# Define template here
template = """Can you tell me the capital of {place} and give me {num} simple
facts about it?"""

# Evaluate the template for "Texas" and 3 facts
prompt=template.format(place="Texas", num=3)

# Call get_completion and get the response, then print it.
response = get_completion(prompt)
print(response)
```

## Ask To Format the Response

Add a template variable called `format` so you can pass in the desired format
for the facts that are given.

```{python}
#| eval: false
# Define template here
CODE

# Evaluate the template for "Texas" and 3 facts
prompt=template.format(CODE)

# Call get_completion and get the response, then print it.
CODE
```
```{python}
# Solution:
# Define template here
template ="""Can you tell me the capital of {place} and give me {num} simple
facts about it?. Format the facts using {format}"""

# Evaluate the template for "Texas" and 3 facts and "uppercase"
prompt=template.format(place="Texas", num=3, format="uppercase")

# Call get_completion and get the response, then print it.
response = get_completion(prompt)
print(response)
```

## Asking About Several Capitals

Let's see how this looks if we ask for the capital of several places.

Replace CODE below to create a template, then create a list called `myPlaces`
of places to use. Use California, Missouri, Florida, Germany and use 3 facts
about the capitals and use upper case for the format.

```{python}
#| eval: false
# Define template here
CODE

# Create the list of places.
myPlaces = CODE

# Loop through the myPlaces
for place in myPlaces:
  prompt = template.format(CODE)
  # Call get_completion, then print_prompt_and_completion
  CODE
```
```{python}
# Solution:
# Define template here
template ="""Can you tell me the capital of {place} and give me {num} simple
facts about it?. Format the {num} facts using {format}"""

# Create the list of places.
myPlaces = ["California", "Missouri", "Florida", "Germany"]

# Loop through the myPlaces
for place in myPlaces:
  prompt = template.format(place=place, num=3, format="a bullet pointed list")
  # Call get_completion, then print_prompt_and_completion
  response = get_completion(prompt)
  print_prompt_and_response(prompt, response)
```
