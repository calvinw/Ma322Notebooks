---
title: "More Calculator"
execute:
    eval: false
---

__Problem__:   

Calculate `4+5` 

```{python}
CODE
```
```{python}
# __SOLUTION__
4+5
```

__Problem__: 

Calculate `4*5`

```{python}
CODE
```
```{python}
# __SOLUTION__
4*5
```

__Problem__: 

Calculate `4-5`

```{python}
CODE
```
```{python}
# __SOLUTION__
4-5
```

__Problem__: 

Calculate `4/5`

```{python}
CODE
```
```{python}
# __SOLUTION__
4/5
```

__Problem__: 

Calculate `4**2`

```{python}
CODE
```
```{python}
# __SOLUTION__
4**2
```

Check:  $4^2=4(4)=16$

__Problem__: Calculate `5**6`
```{python}
CODE
```
```{python}
# __SOLUTION__
5**6
```

Check:  $5^6=(5)(5)(5)(5)(5)(5)=15625$

__Problem__: Calculate `sqrt(36)`
```{python}
CODE
```
```{python}
# __SOLUTION__
import math
math.sqrt(36)
```

Check: $\sqrt{36} = 6$

__Problem__: Calculate `round(2.45)`
```{python}
CODE
```
```{python}
# __SOLUTION__
round(2.45)
```
Check: The answer should be 2

__Problem__: Calculate`math.ceil(2.45)`
```{python}
CODE
```
```{python}
# __SOLUTION__
math.ceil(2.45)
```
Check: The answer should be 3

__Problem__: Calculate `24%10`, which is the remainder of $24/10$
```{python}
CODE
```
```{python}
# __SOLUTION__
24%10
```
__Problem__: Put parentheses in the expression `4+2*3` so it gives 18. As is, it is 10
```{python}
4+2*3
```
```{python}
# __SOLUTION__
(4+2)*3
```

__Problem__: Put parentheses in the expression `4*5+3` so it gives 32. As is, it is 23
```{python}
4*5+3
```
```{python}
# __SOLUTION__
4*(5+3)
```

__Problem__: Put parentheses in the expression `20/4*5` so it gives 1. As is, it is 25
```{python}
20/4*5
```
```{python}
# __SOLUTION__
20/(4*5)
```

__Problem__: Write code that puts in parentheses for `2*9/3*2-1` so it gives 2. As is, it is 11
```{python}
2*9/3*2-1
```
```{python}
# __SOLUTION__
2*9/(3*2)-1
```

__Problem__: The code below generates an error. Run it to see this.
Produce a correct version that computes the square root of 49, which is 7
```{python}
sqrt(49)
```
```{python}
# __SOLUTION__
math.sqrt(49)
```

__Problem__: The code below generates an error. Run it to see this.
Produce a correct version with no errors and that gives 10
```{python}
ceil(9.45)
```
```{python}
# __SOLUTION__
math.sqrt(49)
```

__Problem__: The code below generates an error. Run it to see this.
Produce a correct version with no errors and that gives 9
```{python}
floor(9.45)
```
```{python}
# __SOLUTION__
math.floor(9.45)
```

__Problem__: Below we are trying to print out the two expressions: `3-4` and `5+8`.
But it only prints out the second one.
Produce a correct version by using the `print` function:
```{python}
3-4
5+8
```
```{python}
# __SOLUTION__
print(3-4)
print(5+8)
```
