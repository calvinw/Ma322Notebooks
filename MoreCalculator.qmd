---
title: "More Calculator"
jupyter:
  python3
---

Calculate `4+5` by replacing the line `CODE` with `4+5` and then execute it by hitting the _Run Cell_ button

```{python}
#| eval: false
CODE
```
```{python}
# Solution:
4+5
```

Calculate `4*5`

```{python}
#| eval: false
CODE
```
```{python}
# Solution:
4*5
```

Calculate `4-5`
```{python}
#| eval: false
CODE
```
```{python}
# Solution:
4-5
```

Calculate `4/5`
```{python}
#| eval: false
#| question: true
CODE
```
```{python}
# Solution:
4/5
```

Calculate `4**2`
```{python}
#| eval: false
CODE
```
```{python}
# Solution:
4**2
```

Check  $4^2=4(4)=16$

Calculate `5**6`
```{python}
#| eval: false
CODE
```
```{python}
# Solution:
5**6
```

Check  $5^6=(5)(5)(5)(5)(5)(5)=15625$


Calculate `sqrt(36)`
```{python}
#| eval: false
CODE
```
```{python}
# Solution:
import math
math.sqrt(36)
```

Check:
$$ \sqrt{ 36 } = 6 $$

Find `round(2.45)`

```{python}
#| eval: false
CODE
```
```{python}
# Solution:
round(2.45)
```

The answer should be 2

Find `math.ceil(2.45)`
```{python}
#| eval: false
CODE
```
```{python}
# Solution:
math.ceil(2.45)
```

The answer should be 3

Find `24%10`, which is the remainder of $24/10$
```{python}
#| question: true
#| eval: false
CODE
```
```{python}
# Solution:
24%10
```

Put parentheses in the expression `4+2*3` so it gives 18.

As is, it is 10

```{python}
#| eval: false
4+2*3
```
```{python}
# Solution:
(4+2)*3
```

Put parentheses in the expression `4*5+3` so it gives 32.

As is, it is 23

```{python}
#| eval: false
4*5+3
```
```{python}
# Solution:
4*(5+3)
```

Put parentheses in the expression `20/4*5` so it gives 1.

As is, it is 25

```{python}
#| eval: false
20/4*5
```
```{python}
# Solution:
20/(4*5)
```

Put parentheses in the expression `2*9/3*2-1` so it gives 2.

As is, it is 11

```{python}
#| eval: false
2*9/3*2-1
```
```{python}
# Solution:
2*9/(3*2)-1
```

The code below generates an error.

```{python}
#| eval: false
sqrt(49)
```

Produce a correct version that computes the square root of 49, which is 7

```{python}
# Solution:
import math

math.sqrt(49)
```

The code below generates an error.

```{python}
#| eval: false
ceil(9.45)
```
Produce a correct version below with no errors and that gives 10

```{python}
# Solution:
math.ceil(9.45)
```

The code below generates an error.
```{python}
#| eval: false
floor(9.45)
```

Produce a correct version below with no errors and that gives 9

```{python}
# Solution:
math.floor(9.45)
```

Below we are trying to print out the two expressions: `3-4` and `5+8`.

```{python}
3-4
5+8
```

But it only prints out the second one.

Produce a correct version by using the `print` function:

```{python}
# Solution:
print(3-4)
print(5+8)
```
